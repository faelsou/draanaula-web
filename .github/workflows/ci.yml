name: Build and Deploy to Kubernetes

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - run: npm run lint
      - run: echo "Skip test step for now"

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set_tag.outputs.image_tag }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - run: npm run build

      - name: Definir tag da imagem
        id: set_tag
        run: echo "image_tag=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
      
      - name: Login no Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t faelsouz/estetica-web:${{ steps.set_tag.outputs.image_tag }} .
          docker push faelsouz/estetica-web:${{ steps.set_tag.outputs.image_tag }}

  deploy:
    needs: build
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configurar KUBECONFIG
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config

      - name: Atualizar imagem no Deployment
        run: |
          kubectl set image deployment/estetica-web \
            estetica-web=faelsouz/estetica-web:${{ needs.build.outputs.image_tag }} \
            -n dra-web

      - name: Forçar restart dos pods (touch annotation)
        run: |
          kubectl patch deployment estetica-web \
            -n dra-web \
            -p "{\"spec\":{\"template\":{\"metadata\":{\"annotations\":{\"restarted-at\":\"$(date +%s)\"}}}}}"

      - name: Aguardar rollout do Deployment
        run: |
          kubectl rollout status deployment/estetica-web -n dra-web

      - name: Verificar pods (debug)
        run: kubectl get pods -n dra-web

      - name: Port-forward para localhost:8080
        run: |
          kubectl port-forward svc/estetica-web-service 8080:80 -n dra-web &
          sleep 5

      - name: Esperar app responder
        run: |
          APP_URL="http://localhost:8080"
          echo "Esperando a aplicação ficar disponível em $APP_URL..."
          for i in {1..10}; do
            if curl -s $APP_URL > /dev/null; then
              echo "Aplicação está online!"
              exit 0
            else
              echo "Tentando novamente..."
              sleep 5
            fi
          done
          echo "Aplicação não respondeu!"
          exit 1
        
